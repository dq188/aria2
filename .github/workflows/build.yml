name: Release

on:
  push:
    branches:
    - 'master'
    paths:
    - 'VERSION'

jobs:

  Release_Drafter:
    name: Release_Drafter
    runs-on: ubuntu-latest
    steps:

    - name: Release Drafter
      # You may pin to the exact commit or the version.
      # uses: release-drafter/release-drafter@06d4616a80cd7c09ea3cf12214165ad6c1859e67
      id: create_release
      uses: release-drafter/release-drafter@v5.11.0
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: set upload_url
      id: set_upload_url
      uses: noobly314/share-data@v1
      with:
        share-id: release_url
        mode: set
        key: url
        value: ${{ steps.create_release.outputs.upload_url }}

  u-build:
    name: build_ubuntu
    needs: Release_Drafter
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
            
    - name: Build
      run: |
        cat '/etc/ssl/certs/ca-certificates.crt' > /dev/null
        if [ "$?" -eq 0 ] ; then
        CRT='/etc/ssl/certs/ca-certificates.crt'
        else
        CRT='./certs/ca-certificates.crt'
        fi

        rm -rf aria2_git
        git clone --depth=1 https://github.com/aria2/aria2.git aria2_git
        yes|cp -rf ./patch/src ./aria2_git/
        cd aria2_git

        autoreconf -fi

        ./configure \
            --without-libxml2 \
            --without-libgcrypt \
            --with-openssl \
            --without-libnettle \
            --without-gnutls \
            --without-libgmp \
            --with-libssh2 \
            --with-sqlite3 \
            --with-ca-bundle=$CRT \
            ARIA2_STATIC=yes \
            --enable-shared=no

        make
        cd ..
        cp aria2_git/src/aria2c ./
        rm -rf aria2_git
      
    - name: zip
      run: zip -q -r ubuntu.zip *
    
    - name: get upload_url
      id: get_upload_url
      uses: noobly314/share-data@v1
      with:
        share-id: release_url
        mode: get
        key: url

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The URL for uploading assets to the release
        upload_url: ${{ steps.get_upload_url.outputs.data }}
        # The path to the asset you want to upload
        asset_path: ./ubuntu.zip
        # The name of the asset you want to upload
        asset_name: ubuntu.zip
        # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
        asset_content_type: application/zip

  w-build:
    name: build_windows
    needs: Release_Drafter
    runs-on: windows-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Build
      run: |
        .\aria2_win_build.bat      
    - name: zip
      run: .\7za.exe a -r .\windows.zip ./