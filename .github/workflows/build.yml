name: Release

on:
  push:
    branches:
    - 'master'

jobs:

  Release_Drafter:
    name: Release_Drafter
    runs-on: ubuntu-latest
    steps:

    - name: Release Drafter
      # You may pin to the exact commit or the version.
      # uses: release-drafter/release-drafter@06d4616a80cd7c09ea3cf12214165ad6c1859e67
      id: create_release
      uses: release-drafter/release-drafter@v5.11.0
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: set upload_url
      id: set_upload_url
      uses: noobly314/share-data@v1
      with:
        share-id: release_url
        mode: set
        key: url
        value: ${{ steps.create_release.outputs.upload_url }}

  u-build:
    name: build
    needs: Release_Drafter
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
            
    - name: Build
      run: |
        ./aria2_build.sh
      
    - name: zip
      run: zip -q -r ubuntu.zip *
    
    - name: get upload_url
      id: get_upload_url
      uses: noobly314/share-data@v1
      with:
        share-id: release_url
        mode: get
        key: url

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The URL for uploading assets to the release
        upload_url: ${{ steps.get_upload_url.outputs.data }}
        # The path to the asset you want to upload
        asset_path: ./ubuntu.zip
        # The name of the asset you want to upload
        asset_name: ubuntu.zip
        # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
        asset_content_type: application/zip

  w-build:
    name: build_windows
    needs: Release_Drafter
    runs-on: windows-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        path-type: inherit
        install: >-
          base-devel
          zlib-devel
          sqlite
          unzip
          zip
          tar
          gmp
          gmp-devel
          libssh2
          openssl-devel
          mingw-w64-x86_64-c-ares
          pkg-config
          mingw-w64-x86_64-pkg-config
          libcares-devel
          mingw-w64-x86_64-cppunit
          mingw-w64-x86_64-gcc-libs
          mingw-w64-x86_64-gettext
          mingw-w64-x86_64-libiconv
          mingw-w64-x86_64-libssh2
          libssh2-devel
          mingw-w64-x86_64-libuv
          mingw-w64-x86_64-openssl
          mingw-w64-x86_64-sqlite3
          libsqlite-devel
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-winpthreads
          mingw-w64-x86_64-expat
          libexpat-devel
          mingw-w64-x86_64-zlib
          mingw-w64-x86_64-libtool

    - name: Build
      shell: msys2 {0}
      run: |
        git clone --depth=1 https://github.com/aria2/aria2.git aria2_git
        cd aria2_git
        git apply ../patch/1.patch

        autoreconf -fi || autoreconf -fiv
        HOST=x86_64-w64-mingw32 ./mingw-config

        make
        cd ../
        cp aria2_git/src/aria2c* ./
        rm -rf aria2_git


    - name: zip
      run: ./7za.exe a -r ./windows.zip ./
      
    - name: get upload_url
      id: get_upload_url
      uses: noobly314/share-data@v1
      with:
        share-id: release_url
        mode: get
        key: url

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The URL for uploading assets to the release
        upload_url: ${{ steps.get_upload_url.outputs.data }}
        # The path to the asset you want to upload
        asset_path: ./windows.zip
        # The name of the asset you want to upload
        asset_name: windows.zip
        # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
        asset_content_type: application/zip
